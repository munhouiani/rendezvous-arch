version: "3.9"
services:
  pulsar:
    container_name: pulsar
    image: apachepulsar/pulsar:2.9.1
    ports:
      - "8080:8080"
      - "6650:6650"
    platform: linux/amd64
    volumes:
      - "pulsardata:/pulsar/data"
      - "pulsarconf:/pulsar/conf"
    command: "bin/pulsar standalone"
    restart: always
    healthcheck:
      test: [ "CMD", "nc", "-vz", "localhost", "6650" ]
      interval: 20s
      timeout: 5s
  lr_model:
    container_name: lr_model
    build:
      context: .
      dockerfile: "Dockerfiles/lr_model.Dockerfile"
      args:
        - SRC_MODEL_PATH=../models/lr.model
        - TGT_MODEL_PATH=/model/lr.model
        - PULSAR_HOST=pulsar
        - PULSAR_PORT=6650
        - MODEL_NAME=lr
        - MODEL_VERSION=0
    restart: on-failure
    depends_on:
      - pulsar
  dt_model:
    container_name: dt_model
    build:
      context: .
      dockerfile: "Dockerfiles/lr_model.Dockerfile"
      args:
        - SRC_MODEL_PATH=../models/dt.model
        - TGT_MODEL_PATH=/model/dt.model
        - PULSAR_HOST=pulsar
        - PULSAR_PORT=6650
        - MODEL_NAME=dt
        - MODEL_VERSION=1
    restart: on-failure
    depends_on:
      - pulsar
  decoy_model:
    container_name: decoy_model
    build:
      context: .
      dockerfile: "Dockerfiles/decoy_model.Dockerfile"
      args:
        - PULSAR_HOST=pulsar
        - PULSAR_PORT=6650
        - MODEL_NAME=decoy
    restart: on-failure
    depends_on:
      - pulsar
  score:
    container_name: score
    build:
      context: .
      dockerfile: "Dockerfiles/score.Dockerfile"
      args:
        - PULSAR_HOST=pulsar
        - PULSAR_PORT=6650
        - TIMEOUT=1
        - RET_TOPIC=score
    restart: on-failure
    depends_on:
      - dt_model
      - lr_model
    ports:
      - "8000:8000"
  log_collector:
    container_name: log_collector
    build:
      context: .
      dockerfile: "Dockerfiles/log_collector.Dockerfile"
      args:
        - PULSAR_HOST=pulsar
        - PULSAR_PORT=6650
        - TIMEOUT=5
        - THRESHOLD=1000
        - LOG_TOPIC=log
        - OUTPUT_DIR=/logs
    restart: on-failure
    depends_on:
      - decoy_model
    volumes:
      - "logs:/logs"
  score_collector:
    container_name: score_collector
    build:
      context: .
      dockerfile: "Dockerfiles/log_collector.Dockerfile"
      args:
        - PULSAR_HOST=pulsar
        - PULSAR_PORT=6650
        - TIMEOUT=5
        - THRESHOLD=1000
        - LOG_TOPIC=score
        - OUTPUT_DIR=/scores
    restart: on-failure
    depends_on:
      - decoy_model
    volumes:
      - "scores:/scores"
volumes:
  pulsardata:
  pulsarconf:
  logs:
  scores:
networks:
  default:
    name: pulsar-network
    driver: bridge
